// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	broker "github.com/Ankr-network/kit/broker"
	mock "github.com/stretchr/testify/mock"
)

// Broker is an autogenerated mock type for the Broker type
type Broker struct {
	mock.Mock
}

// Publisher provides a mock function with given fields: topic, reliable
func (_m *Broker) Publisher(topic string, reliable bool) (broker.Publisher, error) {
	ret := _m.Called(topic, reliable)

	var r0 broker.Publisher
	if rf, ok := ret.Get(0).(func(string, bool) broker.Publisher); ok {
		r0 = rf(topic, reliable)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(broker.Publisher)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, bool) error); ok {
		r1 = rf(topic, reliable)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Subscribe provides a mock function with given fields: name, topic, reliable, requeue, handler
func (_m *Broker) Subscribe(name string, topic string, reliable bool, requeue bool, handler interface{}) error {
	ret := _m.Called(name, topic, reliable, requeue, handler)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string, bool, bool, interface{}) error); ok {
		r0 = rf(name, topic, reliable, requeue, handler)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
